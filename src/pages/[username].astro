---
// [username].astro
import UserLayout from '../layouts/UserLayout.astro';
import HeaderProfile from '../components/HeaderProfile/HeaderProfile.astro';
import LinkWidget from '../components/widgets/LinkWidget/LinkWidget.astro';
import BlogWidget from '../components/widgets/BlogWidget/BlogWidget.astro'
import TimelineWidget from '../components/widgets/TimelineWidget/TimelineWidget.astro';
import SectionWidget from '../components/widgets/SectionWidget/SectionWidget.astro';
import ScheduleWidget from '../components/widgets/ScheduleWidget/ScheduleWidget.astro';
import PostWidget from '../components/widgets/PostWidget/PostWidget.astro';
import { getAllStyleProfiles, getActiveWidgets, getProfileByUsername } from '../utils/api';
import type { StylesProfile } from '../types/styles-profile';
import type { WidgetUnion } from '../types/widget';
import '../styles/username.scss'
import type { Profile, ProfileResposeBackend } from '../types/profile';
import ProfileNotFound from '../components/ProfileNotFound/ProfileNotFound.astro';
const { username } = Astro.params;

const profileResponse : ProfileResposeBackend | null = await getProfileByUsername(username!, 'username');
const profile: Profile | null = profileResponse?.data || null;
let styles: null | StylesProfile = null;
  let widgets: null | WidgetUnion[] = null;
// Si no se encuentra el perfil, no seguimos cargando estilos ni widgets
if (!profile) {
  // Mostrar el componente ProfileNotFound en lugar del diseño principal
   styles = null;
   widgets= null;
} else {
  // Si el perfil existe, cargamos los estilos y widgets
  styles= await getAllStyleProfiles(profile.id!);
  widgets = await getActiveWidgets(profile.id!);
}
// const styles: StylesProfile | null = await getAllStyleProfiles(profile?.id!);
// const widgets: WidgetUnion[] = await getActiveWidgets(profile?.id!);
---
{!profile ? (
  // Si el perfil no existe, renderiza el componente ProfileNotFound
  <ProfileNotFound username={username!} />
) : (
<UserLayout profile={profile!} styles={styles!}>
  <div class:list={[
    'profile-container',
    styles?.adaptativeProfile ? 'adaptative-profile' : 'no-adaptative',
  ]}>
  <div class="header">
    <HeaderProfile  profile={profile!} widgets={widgets!} styles={styles!} />

  </div>
<div  class:list={[
    'widgets',
    styles?.banner && 'banner',
    styles?.adaptativeProfile ? 'adaptative' : 'no-adaptative',
  ]}  >
    {(widgets ?? [] ).map((widget) => {
      if (widget.type === 'link') {
        return <LinkWidget widget={widget} styles={styles!} />;
      }
      if (widget.type === 'blog') {
        return <BlogWidget widget={widget} styles={styles!} />;
      }
      if(widget.type === 'timeline'){
        return <TimelineWidget widget={widget} styles={styles!} />
      }
      if(widget.type == 'listWidget' ){
        return <SectionWidget widget={widget} styles={styles!} />
      }
      if(widget.type == 'schedule' ){
        return <ScheduleWidget widget={widget} styles={styles!}  />
      }
      if(widget.type == 'post' ){
        return <PostWidget widget={widget} styles={styles!} />
      }
      // Puedes manejar otros casos aquí si es necesario
      return <p>Widget no encontrado</p> ; // Retorna `null` explícitamente si no hay coincidencia
    })}
  </div>
  </div>
</UserLayout>
)}